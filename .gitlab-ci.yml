stages:
  - setup
  - test
  - app-test
  - cleanup


job 1:
  image: atulabhi/kops:v2
  stage: setup
  script: 
    - set + x 
    - echo " job one success" > test.txt 
   # - python3 new_yml_creator.py
    - gcloud version
    - echo $SDK_TOKEN
    - echo $SDK_TOKEN > key.json
    - cat key.json
    - gcloud auth activate-service-account --key-file=key.json
    #- export GOOGLE_APPLICATION_CREDENTIALS=$SDK_TOKEN
    #- gcloud config set project openebs-ci
  artifacts:
    paths:
      - /binary

gcp 1:2:
  image: atulabhi/kops:v2
  stage: setup
  script: 
    - echo $SDK_TOKEN > key.json
    - gcloud auth activate-service-account --key-file=key.json
    - echo "creating vpc"
    - wget https://raw.githubusercontent.com/openebs/litmus/master/k8s/gcp/k8s-installer/create-vpc.yml
    - ansible-playbook create-vpc.yml --extra-vars "project=openebs-ci vpc_name=openebs-e2e-test" 
gcp 2:2:
  image: atulabhi/kops:v1
  stage: setup
  script: 
    - echo "creating cluster"
    - wget https://raw.githubusercontent.com/openebs/litmus/master/k8s/gcp/k8s-installer/create-k8s-cluster.yml
    - ansible-playbook create-k8s-cluster.yml -vv --extra-vars "project=openebs-ci nodes=3 vpc_name=openebs-e2e-test"
  artifacts:
    paths:
      - /.kube/config

openebs_deploy:
  image: atulabhi/kops:v2
  stage: test
  script:
    - echo "Deploying Openebs"
  dependencies:
    - gcp 2:2
  artifacts:
    paths:
      - /.kube/config

apps-deploy:
  stage: app-test
  script:
   - echo"Deploying apps"
   
  dependencies:
    - openebs_deploy
     

aws:
  stage: setup
  script: echo " job four success"

openebs_deploy:
  stage: test
  script: echo "job aws success"

apps-deploy:
  stage: app-test
  script: echo "job aws success"
